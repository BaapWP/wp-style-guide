{
  "name": "grunt-phantomcss",
  "description": "Plugin to do CSS regression testing via PhantomCSS.",
  "version": "0.3.2",
  "homepage": "https://github.com/anselmh/grunt-phantomcss",
  "author": {
    "name": "Chris Gladd",
    "email": "chris.m.gladd@gmail.com"
  },
  "contributors": [
    {
      "name": "Larry Davis",
      "email": "lazd@lazd.net",
      "url": "https://github.com/lazd"
    },
    {
      "name": "Aliaksei Sapach",
      "email": "dreamsonic@tut.by",
      "url": "https://github.com/asapach"
    },
    {
      "name": "Anselm Hannemann",
      "email": "info@anselm-hannemann.com",
      "url": "http://helloanselm.com/"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/anselmh/grunt-phantomcss.git"
  },
  "bugs": {
    "url": "https://github.com/anselmh/grunt-phantomcss/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/anselmh/grunt-phantomcss/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.10.0"
  },
  "scripts": {
    "test": "grunt test",
    "postinstall": "bower install"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-contrib-nodeunit": "^0.4.1",
    "jit-grunt": "^0.8.0",
    "path": "^0.4.9",
    "time-grunt": "^0.4.0"
  },
  "dependencies": {
    "bower": "^1.3.9",
    "temporary": "0.0.8",
    "phantomjs": "^1.9.7-15"
  },
  "peerDependencies": {
    "phantomjs": "1.9.7-14"
  },
  "keywords": [
    "gruntplugin",
    "phantomcss",
    "css",
    "regression",
    "test",
    "phantomjs",
    "grunt"
  ],
  "gitHead": "2112d7456d2c0d33e414a5597de003ea2bc7bc2c",
  "readme": "# grunt-phantomcss\n\n> Automate CSS regression testing with PhantomCSS\n\n## Notice\n\n**This is a fork of the original (presumably discontinued) repository of [grunt-phantomcss](https://github.com/chrisgladd/grunt-phantomcss). Currently this version here is untagged and unreleased on npm. However, you can install and use this version:**\n\nAdd this to your `package.json`:\n\n    \"grunt-phantomcss\": \"git://github.com/anselmh/grunt-phantomcss.git\",\n\nor, alternatively, type this into your command line interface:\n\n    npm i --save-dev git://github.com/anselmh/grunt-phantomcss.git\n\n## CHANGELOG\n\n* Added `mismatchTolerance` tolerance (`mismatchTolerance: 0.05` is default) (thx [fidgety](https://github.com/chrisgladd/grunt-phantomcss/pull/17))\n* Use PhantomCSS v0.7.1\n* Update dependencies\n* Remove grunt as peerDependency causing multiple issues with peerPackages\n* Fix post-script `bower install`\n\n## TO DO:\n\n* Add timeout as an optional argument (currently can fail on large testing areas with a timeout)\n\n----\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-phantomcss --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-phantomcss');\n```\n\n## The \"phantomcss\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `phantomcss` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  phantomcss: {\n    options: {},\n    your_target: {\n      options: {\n        screenshots: 'test/visual/screenshots/',\n        results: 'results/visual/',\n        viewportSize: [1280, 800],\n        mismatchTolerance: 0.05\n      },\n      src: [\n        'test/visual/**/*.js'\n      ]\n    }\n  }\n});\n```\n\n### Options\n\n#### src\nType: `String|Array`\n\nThe test files to run.\n\n#### options.mismatchTolerance\nType: `Number`\nDefault: `0.05`\n\nToleranz of errors that is allowed in a screenshot (for instance to match anti-aliasing bugs).\n\n#### options.screenshots\nType: `String`\nDefault: `'./screenshots'`\n\nThe screenshots directory where test fixtures (comparison screenshots) are stored. Baseline screenshots will be stored here on the first run if they're not present.\n\n#### options.results\nType: `String`\nDefault: `'./results'`\n\nThe directory to store source, diff, and failure screenshots after tests.\n\n#### options.viewportSize\nType: `Array`\nDefault: `[1280, 800]`\n\nThe viewport size to test the site in `[width, height]` format. Useful when testing responsive layouts.\n\n#### options.logLevel\nType: `String`\nDefault: `error`\n\nThe CasperJS log level. See [CasperJS: Logging](http://casperjs.readthedocs.org/en/latest/logging.html) for details.\n\n\n### Usage Examples\n\n#### Basic visual tests\nRun tests in `test/visual/` against comparison screenshots stored in `test/visual/screenshots/`, and put the resulting screenshots in `results/visual/`\n\n```js\ngrunt.initConfig({\n  phantomcss: {\n    options: {\n      screenshots: 'test/visual/screenshots/',\n      results: 'results/visual/'\n    },\n    src: [\n      'test/visual/**/*.js'\n    ]\n  }\n});\n```\n\n#### Responsive layout testing\nRun tests in `test/visual/` against comparison screenshots for destop and mobile.\n\n```js\ngrunt.initConfig({\n  phantomcss: {\n    desktop: {\n      options: {\n        screenshots: 'test/visual/desktop/',\n        results: 'results/visual/desktop',\n        viewportSize: [1024, 768]\n      },\n      src: [\n        'test/visual/**.js'\n      ]\n    },\n    mobile: {\n      options: {\n        screenshots: 'test/visual/mobile/',\n        results: 'results/visual/mobile',\n        viewportSize: [320, 480]\n      },\n      src: [\n        'test/visual/**.js'\n      ]\n    }\n  },\n});\n```\n\n#### Sample test file\n\nTest files should do the following:\n* Start CasperJS with the URL you want to test\n* Manipulate the page in some way\n* Take screenshots\n\n```javascript\ncasper.start('http://localhost:3000/')\n.then(function() {\n  phantomcss.screenshot('#todo-app', 'Main app');\n})\n.then(function() {\n  casper.fill('form.todo-form', {\n    todo: 'Item1'\n  }, true);\n\n  phantomcss.screenshot('#todo-app', 'Item added');\n})\n.then(function() {\n  casper.click('.todo-done');\n\n  phantomcss.screenshot('#todo-app', 'Item checked off');\n});\n```\n\nYou can also load a local file by specifying a path (relative to the Gruntfile):\n\n```javascript\ncasper.start('build/client/index.html')\n.then(function() {\n  // ...\n});\n```\n\n### Multiple Test Files\nYour first test file should use ```casper.start```\n\n```javascript\ncasper.start('http://localhost:3000/')\n.then(function() {\n  phantomcss.screenshot('#todo-app', 'Main app');\n})\n.then(function() {\n  casper.fill('form.todo-form', {\n    todo: 'Item1'\n  }, true);\n\n  phantomcss.screenshot('#todo-app', 'Item added');\n});\n\n```\nSubsequent files should call ```casper.then``` to continue the previous test.\n\n```javascript\ncasper.then(function() {\n  casper.click('.todo-done');\n\n  phantomcss.screenshot('#todo-app', 'Item checked off');\n});\n```\nYou can also use ```casper.thenOpen``` to load a new url and continue testing in subsequent files instead of ```casper.start```.\n\n\nSee the [CasperJS documentation](http://casperjs.readthedocs.org/en/latest/modules/casper.html) and the [PhantomCSS documentation](https://github.com/Huddle/PhantomCSS) for more information on using CasperJS and PhantomCSS.\n\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 2014-02-23   v0.2.2   Added multiple file example to README.md\n* 2014-02-07   v0.2.1   Fixed ResembleJS path issue\n* 2014-01-07   v0.2.0   Merged updates from Larry Davis\n* 2013-10-24   v0.1.1   Added the ability to use an external server\n* 2013-10-24   v0.1.0   Initial Release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-phantomcss@0.3.2",
  "_shasum": "657f95b102eadc8b054df14a191e42ef8ac94b14",
  "_from": "git://github.com/anselmh/grunt-phantomcss.git",
  "_resolved": "git://github.com/anselmh/grunt-phantomcss.git#2112d7456d2c0d33e414a5597de003ea2bc7bc2c"
}
